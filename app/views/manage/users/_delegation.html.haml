#delegation.row.margin-vertical-s

  .col1of2.padding-right-xs

    .row.padding-inset-s.emboss.margin-bottom-xxs
      .col1of2
        %strong.font-size-m= "#{_("Name")} *"
      .col1of2
        %input.width-full{type: "text", name: "user[firstname]", value: @user.try(:firstname)}

    #users.row.emboss.margin-bottom-xxs
      .row.padding-inset-s
        .col1of2
          %strong.font-size-m= _("Users")
        .col1of2
          .row
            %input.width-full{type: "text", placeholder: _("Name of the user"), :"data-search-users" => true, autocomplete: :off}

      .row.list-of-lines.even{:"data-users-list" => true}

        = render partial: "manage/templates/user_inline_entry", collection: @user.users.sort {|u1, u2| u1.firstname <=> u2.firstname}, as: :user, locals: { ref_name: "user" }

  .col1of2.padding-left-xs

    .row.padding-inset-s.emboss.margin-bottom-xxs
      .col1of2
        %strong.font-size-m= "#{_("Responsible")} *"
      .col1of2
        %label.row
          %input{:type => "hidden", :name => "user[delegator_user_id]", :value => @user.try(:delegator_user_id)}
          %input.width-full{:type => "text",
                            :value => @user.delegator_user.try(:name),
                            :autocomplete => :off,
                            :placeholder => _("Name of the responsible"),
                            :title => _("Responsible"),
                            :data => { :url => manage_users_path(type: :user),
                                       :type => "autocomplete",
                                       :autocomplete_search_attr => "search_term",
                                       :autocomplete_element_tmpl => "views/autocomplete/element",
                                       :autocomplete_value_target => "user[delegator_user_id]",
                                       :autocomplete_display_attribute => "name",
                                       :autocomplete_value_attribute => "id",
                                       :autocomplete_blur_on_select => "true" }}

    = render "access_right_for_ip" if current_inventory_pool
